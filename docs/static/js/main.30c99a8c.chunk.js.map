{"version":3,"sources":["components/AddCategory.jsx","components/helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGif.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","trim","length","cats","preventDefault","type","value","onChange","target","getGifs","category","a","query","encodeURI","url","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","description","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAsCeA,EAnCY,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACI,uBAAMC,SAbW,SAACC,GAEfH,EAAWI,OAAOC,OAAS,IAC1BP,GAAc,SAAAQ,GAAI,OAAIN,GAAJ,mBAAkBM,OACpCL,EAAc,KAGlBE,EAAEI,kBAMF,UACQ,6BAAKP,IACL,uBACIQ,KAAK,OACLC,MAAOT,EACPU,SAtBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,c,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,yBAAAC,EAAA,4DAEJ,mCACTC,EAAQC,UAAUH,GACV,GACRI,EALa,2DAEJ,mCAFI,cAKyDF,EALzD,kBAIL,IAJK,SAMIG,MAAOD,GANX,cAMbE,EANa,gBAOEA,EAASC,OAPX,uBAOZC,EAPY,EAOZA,KAEDC,EAAQD,EAAKE,KAAI,SAAAC,GACnB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVT,IAAKO,EAAIG,OAAOC,iBAAiBX,QAbtB,kBAiBdK,GAjBc,4CAAH,sDCYLO,EAVK,SAAC,GAA6B,IAA5BH,EAA2B,EAA3BA,MAAMI,EAAqB,EAArBA,YAAYb,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKH,IACpB,4BAAIJ,QCsBDQ,EAtBC,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFJ,SAACA,GAAa,IAAD,EAEPd,mBAAS,CAC/BsB,KAAK,GACLc,SAAQ,IAJqB,mBAE1BC,EAF0B,KAEnBC,EAFmB,KAmBjC,OAZCC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACnBhB,KAAKmB,EACLL,SAAQ,SAGlB,CAACtB,IAKGuB,EDdoBK,CAAa5B,GAAhCc,EAHgB,EAGrBN,KAAac,EAHQ,EAGRA,QAEpB,OAEI,gCACI,6BAAKtB,IAGL,sBAAKkB,UAAU,aAAf,UAEKI,EAAU,mBAAGJ,UAAU,oCAAb,4BAAsE,KAC/EJ,EAAOJ,KAAI,SAACmB,GAAD,OAAU,cAAC,EAAD,eACmBA,GADDA,EAAMjB,cEUhDkB,EA3BM,WAAM,MAGa5C,mBAAS,IAHtB,mBAGhB6C,EAHgB,KAGJ9C,EAHI,KAMvB,OACI,gCACI,+CACA,cAAC,EAAD,CAAcA,cAAeA,IAE7B,uBAEA8C,EAAWrB,KAAI,SAAAV,GAAQ,OACb,cAAC,EAAD,CACUA,SAAUA,GADLA,U,MCXrCgC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.30c99a8c.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e ) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats=>[ inputValue,...cats])\r\n            setInputValue('')\r\n        }\r\n\r\n        e.preventDefault()\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                <h1>{inputValue}</h1>\r\n                <input\r\n                    type='text'\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory; ","export const getGifs = async(category) =>{\r\n\r\n    const apiKey = 'pFzfhDbyPWdBZA2jSGmonReg1DlKTXFH'\r\n    const query = encodeURI(category)\r\n    const limit = 10\r\n    const url = `https://api.giphy.com/v1/stickers/search?api_key=${apiKey}&q=${query}&limit=${limit}`\r\n    const response = await fetch (url)\r\n    const {data} = await response.json();\r\n\r\n    const gifs =  data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n  return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({title,description,url}) => {\r\n    \r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={description} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGif';\r\nimport GifGridItem from './GifGridItem';\r\n//import { getGifs } from './helpers/getGifs';\r\n\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images, loading} = useFetchGifs(category) //custom hook\r\n      \r\n    return (\r\n\r\n        <div>\r\n            <h3>{category}</h3>\r\n         \r\n            \r\n            <div className='card-grid '>\r\n\r\n                {loading ? <p className=\"animate__animated animate__bounce\">Loading chaval</p> : null}\r\n                { images.map((image)=> <GifGridItem key={image.id} \r\n                                                      {...image}/>)}\r\n            </div> \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","// los hooks no son nada mas que funciones\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../components/helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n        const [state, setstate] = useState({\r\n            data:[],\r\n            loading:true\r\n        })\r\n\r\n         useEffect(()  => {\r\n             getGifs(category)\r\n                 .then(imgs => setstate({\r\n                     data:imgs,\r\n                     loading:false\r\n                 }))\r\n\r\n         },[category])\r\n\r\n         \r\n\r\n  \r\n        return state;\r\n}","import React, {useState} from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories =  \r\n    const [categories, setCategories] = useState([])\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory  setCategories={setCategories}  />\r\n           \r\n            <hr/>\r\n\r\n          { categories.map(category =>\r\n                      <GifGrid  key={category}\r\n                                category={category}/>\r\n           )}\r\n                \r\n            \r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}